version: '3.9'

networks:
  default:
    external: true
    name: ${DOCKER_NETWORK}
  # local network:
  intnet:
    external: false
    name: ${INT_NETWORK}

services:
  # Alpine Linux - nginx
  webtombola:
    depends_on:
      webtombola-tomcat:
        condition: service_healthy
    image: nginx:alpine
    # image: lhsradek/lhsdock:v3
    container_name: "${APP_ID}-nginx"
    hostname: "${APP_HOST}"
    restart: ${DOCKER_RESTART_POLICY}
    # ports:
    # - 80:80
    # - 443:443
    volumes:
      # The first mount add bash and ping to nginx:alpine - lhsradek/lhsdock this dont'n need, see:
      # https://github.com/lhsradek/platypus-lhsdock/blob/main/context/Dockerfile of lhsradek/lhsdock:v3
      - ./extras/nginx/add.sh:/docker-entrypoint.d/05-add-packages.sh
      - ./certs/${CERTNAME}.crt:/etc/ssl/private/cacert.pem:ro
      - ./certs/${CERTNAME}.key:/etc/ssl/private/cacert-key.pem:ro
      - ./application/html:/var/www/html:rw
      - adminer:/var/www/html/ad:rw
      # for http
      # - ./extras/nginx/default-http.conf:/etc/nginx/conf.d/default.conf:ro
      # for https
      - ./extras/nginx/default-https.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/tombola-nginx:/var/log/nginx:rw
    networks:
      # for traefik:
      - default
      # local network:
      - intnet
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.webtombola-public.rule=Host(`ad.${APP_HOST}`, `${APP_HOST}`)"
      - "traefik.http.routers.webtombola-public.entrypoints=https"
      - "traefik.http.routers.webtombola-public.tls=true"
      # for https:
      - "traefik.http.services.webtombola.loadbalancer.server.scheme=https"
      - "traefik.http.services.webtombola.loadbalancer.server.port=443"
    healthcheck:
      test: "curl -s -I http://localhost/nginx_status | grep -q 'HTTP/1.1 200 OK'"
      interval: 10s
      timeout: 2s
      retries: 50

  webtombola-tomcat:
    # Ubuntu 22.04.1 LTS
    #build:
    #  context: ./context
    #  dockerfile: Dockerfile 
    #image: lhsradek/tombola:v1
    image: tomcat:9
    container_name: "${APP_ID}-tomcat"
    # hostname: "web"
    hostname: "tombola.${APP_HOST}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      # for traefik:
      - default
      # local network:
      - intnet
    volumes:
      - ./certs/${TOMBOLA_CERTNAME}.crt:/usr/local/tomcat/conf/localhost.pem:ro
      - ./certs/${TOMBOLA_CERTNAME}.key:/usr/local/tomcat/conf/localhost-key.pem:ro
      - ./extras/usr/local/tomcat/webapps:/usr/local/tomcat/webapps:rw
      - ./extras/usr/local/tomcat/conf/server.xml:/usr/local/tomcat/conf/server.xml:ro
      - ./extras/usr/local/tomcat/conf/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml:ro
      - ./extras/usr/local/tomcat/conf/web.xml:/usr/local/tomcat/conf/web.xml:ro
      - ./extras/usr/local/tomcat/bin/catalina.sh:/usr/local/tomcat/bin/catalina.sh:ro
      - ./logs/tombola-tomcat:/usr/local/tomcat/logs:rw
    # for elastic beats, see:
    # https://github.com/lhsradek/platypus-lhsdock/blob/main/extras/heartbeat/heartbeat.yml
    # https://github.com/lhsradek/platypus-lhsdock/blob/main/extras/metricbeat/modules.d/tomcat.yml
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.webtombola-tomcat-public.rule=Host(`tombola.${APP_HOST}`)"
      - "traefik.http.routers.webtombola-tomcat-public.entrypoints=https"
      - "traefik.http.routers.webtombola-tomcat-public.tls=true"
      #- "traefik.http.services.webtombola-tomcat.loadbalancer.server.scheme=http"
      #- "traefik.http.services.webtombola-tomcat.loadbalancer.server.port=8080"
    # for https:
      - "traefik.http.services.webtombola-tomcat.loadbalancer.server.scheme=https"
      - "traefik.http.services.webtombola-tomcat.loadbalancer.server.port=8443"
    healthcheck:
      test: "curl -s -I http://localhost:8080/info.jsp | grep -q 'HTTP/1.1 200'"
      interval: 10s
      timeout: 2s
      retries: 50

  webtombola-ad:
    # Alpine
    image: adminer:fastcgi
    container_name: "${APP_ID}-ad"
    hostname: "ad-php"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      # local network:
      - intnet
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      - ./logs/tombola-nginx:/var/log/nginx:rw
      - adminer:/var/www/html:rw
#
# Now is loadbalanced by service webtombola and trafik's loadbalancing is disabled
#
#    labels:
#      - "traefik.enable=true"
#      - "traefik.docker.network=${DOCKER_NETWORK}"
#      - "traefik.http.routers.webtombola-ad-public.rule=Host(`ad.${APP_HOST}`)"
#      - "traefik.http.routers.webtombola-ad-public.entrypoints=https"
#      - "traefik.http.routers.webtombola-ad-public.tls=true"


#       
#   Redis Commander - Web Console for Redis
#        
#   webtombola-rc:
#     image: rediscommander/redis-commander:latest
#     container_name: "${APP_ID}-webrc"
#     hostname: "webrc.${INT_NETWORK}"
#     # build: .
#     restart: ${DOCKER_RESTART_POLICY}
#     networks:
#       # for traefik:
#       - default
#       # local network:
#       - intnet
#     environment:
#       - REDIS_HOSTS=redis
#     #ports:
#     # - "8081:8081"
#     labels:
#       - "traefik.enable=true"
#       - "traefik.docker.network=${DOCKER_NETWORK}"
#       - "traefik.http.routers.webtombola-rc-public.rule=Host(`rc.${APP_HOST}`)"
#       - "traefik.http.routers.webtombola-rc-public.entrypoints=https"
#       - "traefik.http.routers.webtombola-rc-public.tls=true"
#       - "traefik.http.services.webtombola-rc-platypus-${APP_ID}.loadbalancer.server.port=8081"
#       - "traefik.http.services.webtombola-rc-platypus-${APP_ID}.loadbalancer.server.scheme=http"

  postgres:
    image: postgres:13-alpine
    container_name: "${APP_ID}-db"
    hostname: "db.${APP_HOST}"
    # hostname: "db.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    networks:
      # local network:
      - intnet
    volumes:
      - postgres:/var/lib/postgresql/data:rw
      - ./extras/elastic:/root/elastic
      - ./extras/docker-entrypoint-initdb.d/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh:ro
      # after init db
      # - ./logs/tombola-postgres:/var/lib/postgresql/data/log:rw
      # only copy file after init db is better
      # - ./extras/var/lib/postgresql/data/postgresql.conf:/var/lib/postgresql/data/postgresql.conf:ro
      ## - ./extras/var/lib/postgresql/data/pg_hba.conf:/var/lib/postgresql/data/pg_hba.new.conf:ro

  redis:
    image: redis:7-alpine3.16
    # Alpine Linux
    container_name: "${APP_ID}-redis"
    hostname: "redis"
    # hostname: "redis.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      # local network:
      - intnet
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    # ports:
    #  - 6379:6379
    volumes:
      - redis:/data:rw

volumes:
  postgres:
    external: false
    name: "${APP_ID}-db"
  adminer:
    external: false
    name: "${APP_ID}-adminer"
  redis:
    external: false
    name: "${APP_ID}-redis"


version: '3.9'

networks:
  default:
    external: true
    name: ${DOCKER_NETWORK}
  # local network:
  intnet:
    external: false
    name: ${INT_NETWORK}

services:
  # Alpine Linux - nginx
  webtombola:
    image: nginx:alpine
    # image: lhsradek/lhsdock:v3
    container_name: "${APP_ID}-nginx"
    hostname: "${APP_HOST}.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    # ports:
    # - 80:80
    # - 443:443
    volumes:
      - ./certs/${CERTNAME}.pem:/etc/ssl/private/cacert.pem:ro
      - ./certs/${CERTNAME}.key:/etc/ssl/private/cacert-key.pem:ro
      - ./application/html:/var/www/html:rw
      - adminer:/var/www/html/ad:rw
      # for http
      # - ./extras/nginx/default-http.conf:/etc/nginx/conf.d/default.conf:ro
      # for https
      - ./extras/nginx/default-https.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/tombola-nginx:/var/log/nginx:rw
    networks:
      # for traefik:
      - default
      # local network:
      - intnet
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${DOCKER_NETWORK}"
      - "traefik.http.routers.webtombola-public.rule=Host(`ad.${APP_HOST}`, `${APP_HOST}`)"
      - "traefik.http.routers.webtombola-public.entrypoints=https"
      - "traefik.http.routers.webtombola-public.tls=true"
      # for https:
      - "traefik.http.services.webtombola-${APP_ID}.loadbalancer.server.scheme=https"
      - "traefik.http.services.webtombola-${APP_ID}.loadbalancer.server.port=443"

  webtombola-tomcat:
    # Ubuntu 22.04.1 LTS
    # bash
    image: tomcat:9.0
    container_name: "${APP_ID}-tomcat"
    hostname: "web"
    # hostname: "web.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      # for traefik:
      - default
      # local network:
      - intnet
    volumes:
      # - /root/bin/ubuntu:/root/bin/ubuntu:ro
      - ./certs/${CERTNAME}.pem:/usr/local/tomcat/conf/localhost.pem:ro
      - ./certs/${CERTNAME}.key:/usr/local/tomcat/conf/localhost-key.pem:ro
      - ./extras/usr/local/tomcat/webapps:/usr/local/tomcat/webapps:rw
      - ./extras/usr/local/tomcat/conf/server.xml:/usr/local/tomcat/conf/server.xml:ro
      - ./extras/usr/local/tomcat/conf/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml:ro
      - ./extras/usr/local/tomcat/conf/web.xml:/usr/local/tomcat/conf/web.xml:ro
      - ./extras/usr/local/tomcat/bin/catalina.sh:/usr/local/tomcat/bin/catalina.sh:ro
      - ./logs/tombola-tomcat:/usr/local/tomcat/logs:rw
    # labels:
    # - "traefik.enable=true"
    # - "traefik.docker.network=${DOCKER_NETWORK}"
    # - "traefik.http.routers.webtombola-tomcat-public.rule=Host(`web.${APP_HOST}`)"
    # - "traefik.http.routers.webtombola-tomcat-public.entrypoints=https"
    # - "traefik.http.routers.webtombola-tomcat-public.tls=true"
    # for https:
    # - "traefik.http.services.webtombola-tomcat.loadbalancer.server.scheme=https"
    # - "traefik.http.services.webtombola-tomcat.loadbalancer.server.port=8443"

  webtombola-ad:
    # Alpine
    image: adminer:fastcgi
    container_name: "${APP_ID}-ad"
    hostname: "ad-php"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      # local network:
      - intnet
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      - adminer:/var/www/html:rw
      - ./logs/tombola-nginx:/var/log/nginx:rw
#    labels:
#      - "traefik.enable=true"
#      - "traefik.docker.network=${DOCKER_NETWORK}"
#      - "traefik.http.routers.webtombola-ad-public.rule=Host(`ad.${APP_HOST}`)"
#      - "traefik.http.routers.webtombola-ad-public.entrypoints=https"
#      - "traefik.http.routers.webtombola-ad-public.tls=true"

  postgres:
    image: postgres:13.7-alpine
    container_name: "${APP_ID}-db"
    hostname: "db"
    # hostname: "db.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    # ports:
    #  - 5432:5432
    networks:
      # local network:
      - intnet
    volumes:
      - postgres:/var/lib/postgresql/data:rw
      - /extras/elastic:/root/elastic
      - ./extras/docker-entrypoint-initdb.d/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh:ro
      # after init db
      # - ./logs/tombola-postgres:/var/lib/postgresql/data/log:rw
      # only copy file after init db is better
      # - ./extras/var/lib/postgresql/data/postgresql.conf:/var/lib/postgresql/data/postgresql.conf:ro
      ## - ./extras/var/lib/postgresql/data/pg_hba.conf:/var/lib/postgresql/data/pg_hba.new.conf:ro

  redis:
    image: redis:7.0.4-alpine
    # Alpine Linux
    container_name: "${APP_ID}-redis"
    hostname: "redis"
    # hostname: "redis.${INT_NETWORK}"
    restart: ${DOCKER_RESTART_POLICY}
    networks:
      # local network:
      - intnet
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    # ports:
    # - 6379:6379
    volumes:
      # - /root/bin/alpine:/root/bin/alpine:ro
      - redis:/data
      # - ./extras/etc/sysctl.d/sysctl.conf:/etc/sysctl.d/sysctl.conf:ro

volumes:
  postgres:
    external: false
    name: "${APP_ID}-db"
  redis:
    external: false
    name: "${APP_ID}-redis"
  adminer:
    external: false
    name: "${APP_ID}-adminer"

